{% extends 'b2.html.twig' %}

{% block title %}Register{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: url('/background.jpg') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .register-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            box-shadow: 0 0 30px rgba(0,0,0,0.2);
            padding: 40px 50px;
            width: 400px;
            max-width: 90%;
            box-sizing: border-box;
        }
        .register-container h1 {
            margin-bottom: 30px;
            font-weight: 700;
            color: #333;
            text-align: center;
            letter-spacing: 1.5px;
        }
        .form-group {
            margin-bottom: 25px;
            display: flex;
            align-items: center;
        }
        .form-label {
            min-width: 35px;
            text-align: center;
            margin-right: 12px;
            color: #555;
            font-weight: 600;
            user-select: none;
        }
        input[type="email"],
        input[type="password"] {
            flex: 1;
            padding: 12px;
            font-size: 1rem;
            border: 1.8px solid #ccc;
            border-radius: 8px;
            transition: border-color 0.3s ease;
            box-sizing: border-box;
        }
        input[type="email"]:focus,
        input[type="password"]:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 6px rgba(0, 123, 255, 0.5);
        }
        input[type="checkbox"] {
            width: auto;
            margin-right: 8px;
            vertical-align: middle;
            height: auto;
            cursor: pointer;
        }
        .checkbox-label {
            font-weight: 600;
            color: #555;
            cursor: pointer;
            user-select: none;
        }
        .form-error {
            color: #ff3860;
            font-weight: 600;
            font-size: 0.875rem;
            margin-top: -15px;
            margin-bottom: 15px;
            padding-left: 47px; /* align with input */
            display: block;
        }
        button.btn {
            width: 100%;
            padding: 12px;
            background-color: #007bff;
            border: none;
            border-radius: 8px;
            color: white;
            font-weight: 700;
            font-size: 1.1rem;
            letter-spacing: 1.1px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            box-sizing: border-box;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        button.btn:hover {
            background-color: #0056b3;
        }
        .login-link {
            margin-top: 20px;
            text-align: center;
            font-size: 0.95rem;
            color: #555;
        }
        .login-link a {
            color: #007bff;
            font-weight: 600;
            text-decoration: none;
        }
        .login-link a:hover {
            text-decoration: underline;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
{% endblock %}

{% block body %}
<div class="register-container" role="main" aria-label="Registration Form">
    <h1>Register</h1>

    {{ form_errors(registrationForm) }}

    {{ form_start(registrationForm, {'attr': {'novalidate': 'novalidate'}}) }}

        <div class="form-group">
            <label for="{{ registrationForm.email.vars.id }}" class="form-label" title="Email">
                <i class="fa-solid fa-envelope" aria-hidden="true"></i>
            </label>
            {{ form_widget(registrationForm.email, {'attr': {
                'class': 'form-control',
                'aria-required': 'true',
                'aria-describedby': registrationForm.email.vars.id ~ '_error',
                'aria-invalid': registrationForm.email.vars.valid ? 'false' : 'true',
                'id': registrationForm.email.vars.id,
                'autocomplete': 'email',
                'autofocus': 'autofocus',
                'type': 'email',
                'pattern': "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$",
                'title': 'Please enter a valid email address'
            }}) }}
        </div>
        {{ form_errors(registrationForm.email, { 'attr': { 'class': 'form-error' } }) }}

        <div class="form-group">
            <label for="{{ registrationForm.plainPassword.vars.id }}" class="form-label" title="Password">
                <i class="fa-solid fa-lock" aria-hidden="true"></i>
            </label>
            {{ form_widget(registrationForm.plainPassword, {'attr': {
                'class': 'form-control',
                'aria-required': 'true',
                'aria-describedby': registrationForm.plainPassword.vars.id ~ '_error',
                'aria-invalid': registrationForm.plainPassword.vars.valid ? 'false' : 'true',
                'id': registrationForm.plainPassword.vars.id,
                'autocomplete': 'new-password',
                'pattern': "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}",
                'title': "Password must be at least 8 characters, include uppercase, lowercase, and a number."
            }}) }}
        </div>
        {{ form_errors(registrationForm.plainPassword, { 'attr': { 'class': 'form-error' } }) }}

        <div class="form-group">
            <label for="confirm_password" class="form-label" title="Confirm Password">
                <i class="fa-solid fa-lock" aria-hidden="true"></i>
            </label>
            <input 
                type="password" 
                id="confirm_password" 
                name="confirm_password" 
                class="form-control" 
                required 
                autocomplete="new-password"
                pattern="(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
                title="Please enter the same password as above"
                aria-required="true"
            >
        </div>
        <div id="confirm_password_error" class="form-error" style="display:none; padding-left: 47px;">
            Passwords do not match.
        </div>

        <div class="form-group" style="align-items: center;">
            {{ form_widget(registrationForm.agreeTerms, {'attr': {
                'aria-required': 'true',
                'aria-invalid': registrationForm.agreeTerms.vars.valid ? 'false' : 'true',
                'id': registrationForm.agreeTerms.vars.id,
                'style': 'width:auto; margin-right:8px; height:18px; cursor:pointer;'
            }}) }}
            <label for="{{ registrationForm.agreeTerms.vars.id }}" class="checkbox-label">
                I agree to the terms and conditions
            </label>
        </div>
        {{ form_errors(registrationForm.agreeTerms) }}

        <button type="submit" class="btn" aria-label="Register">
            <i class="fa-solid fa-user-plus" aria-hidden="true"></i> Register
        </button>

    {{ form_end(registrationForm) }}

    <div class="login-link" role="contentinfo" style="margin-top: 15px;">
        <p>Already have an account? <a href="{{ path('app_login') }}" aria-label="Login to existing account">Sign in here</a></p>
    </div>
</div>

<script>
    // Confirm password validation before submitting form
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form');
        const passwordInput = document.getElementById('{{ registrationForm.plainPassword.vars.id }}');
        const confirmPasswordInput = document.getElementById('confirm_password');
        const confirmPasswordError = document.getElementById('confirm_password_error');

        form.addEventListener('submit', function (e) {
            if (passwordInput.value !== confirmPasswordInput.value) {
                e.preventDefault();
                confirmPasswordError.style.display = 'block';
                confirmPasswordInput.setAttribute('aria-invalid', 'true');
                confirmPasswordInput.focus();
            } else {
                confirmPasswordError.style.display = 'none';
                confirmPasswordInput.setAttribute('aria-invalid', 'false');
            }
        });
    });
</script>
{% endblock %}